
Trrafic control.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000cc2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00000cc2  00000d56  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000001  00800060  00800060  00000d56  2**0
                  ALLOC
  3 .stab         00002a0c  00000000  00000000  00000d58  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000a96  00000000  00000000  00003764  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  000041fa  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000188  00000000  00000000  00004229  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00000d67  00000000  00000000  000043b1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 000004d8  00000000  00000000  00005118  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   0000078a  00000000  00000000  000055f0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000002ac  00000000  00000000  00005d7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000037b  00000000  00000000  00006028  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00000b17  00000000  00000000  000063a3  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000108  00000000  00000000  00006eba  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 22 01 	jmp	0x244	; 0x244 <__vector_1>
   8:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
   c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  10:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  14:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  18:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  1c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  20:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  24:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  28:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  2c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  30:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  34:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  38:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  3c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  40:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  44:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  48:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  4c:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>
  50:	0c 94 3c 00 	jmp	0x78	; 0x78 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_clear_bss>:
  60:	20 e0       	ldi	r18, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	01 c0       	rjmp	.+2      	; 0x6a <.do_clear_bss_start>

00000068 <.do_clear_bss_loop>:
  68:	1d 92       	st	X+, r1

0000006a <.do_clear_bss_start>:
  6a:	a1 36       	cpi	r26, 0x61	; 97
  6c:	b2 07       	cpc	r27, r18
  6e:	e1 f7       	brne	.-8      	; 0x68 <.do_clear_bss_loop>
  70:	0e 94 2a 02 	call	0x454	; 0x454 <main>
  74:	0c 94 5f 06 	jmp	0xcbe	; 0xcbe <_exit>

00000078 <__bad_interrupt>:
  78:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000007c <APP_init>:

// functions definitions
void APP_init(void)
{
	//initalize car and pedestrian LEDs as outputs
	LED_init(CAR_PORT, RED_LED);
  7c:	60 e0       	ldi	r22, 0x00	; 0
  7e:	81 e4       	ldi	r24, 0x41	; 65
  80:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LED_init>
	LED_init(CAR_PORT, YELLOW_LED);
  84:	61 e0       	ldi	r22, 0x01	; 1
  86:	81 e4       	ldi	r24, 0x41	; 65
  88:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LED_init>
	LED_init(CAR_PORT, GREEN_LED);
  8c:	62 e0       	ldi	r22, 0x02	; 2
  8e:	81 e4       	ldi	r24, 0x41	; 65
  90:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LED_init>
	LED_init(PED_PORT, RED_LED);
  94:	60 e0       	ldi	r22, 0x00	; 0
  96:	82 e4       	ldi	r24, 0x42	; 66
  98:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LED_init>
	LED_init(PED_PORT, YELLOW_LED);
  9c:	61 e0       	ldi	r22, 0x01	; 1
  9e:	82 e4       	ldi	r24, 0x42	; 66
  a0:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LED_init>
	LED_init(PED_PORT, GREEN_LED);
  a4:	62 e0       	ldi	r22, 0x02	; 2
  a6:	82 e4       	ldi	r24, 0x42	; 66
  a8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <LED_init>
	
	// interrupt initalization
	ExtInt0_init();
  ac:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <ExtInt0_init>
  b0:	08 95       	ret

000000b2 <yellow_blink>:
	//7.car red off
	LED_off(CAR_PORT, RED_LED);
	
}
void yellow_blink(EN_mode_t mode)
{
  b2:	cf 93       	push	r28
  b4:	df 93       	push	r29
	int counter;
	switch(mode){
  b6:	88 23       	and	r24, r24
  b8:	21 f0       	breq	.+8      	; 0xc2 <yellow_blink+0x10>
  ba:	81 30       	cpi	r24, 0x01	; 1
  bc:	09 f0       	breq	.+2      	; 0xc0 <yellow_blink+0xe>
  be:	42 c0       	rjmp	.+132    	; 0x144 <yellow_blink+0x92>
  c0:	23 c0       	rjmp	.+70     	; 0x108 <yellow_blink+0x56>
  c2:	ca e0       	ldi	r28, 0x0A	; 10
  c4:	d0 e0       	ldi	r29, 0x00	; 0
		case NORMAL_YELLOW_BLINK: //case car yellow only blinking in normal mode
		for(counter=0;counter<10;counter++) // toggle led 10 times each of 0.5 sec of total 5 sec
		{
			//toggle car yellow LED 
			LED_toggle(CAR_PORT, YELLOW_LED);
  c6:	61 e0       	ldi	r22, 0x01	; 1
  c8:	81 e4       	ldi	r24, 0x41	; 65
  ca:	0e 94 1d 02 	call	0x43a	; 0x43a <LED_toggle>
			//toggle pedestrian yellow LED
			LED_toggle(PED_PORT, YELLOW_LED);
  ce:	61 e0       	ldi	r22, 0x01	; 1
  d0:	82 e4       	ldi	r24, 0x42	; 66
  d2:	0e 94 1d 02 	call	0x43a	; 0x43a <LED_toggle>
			// wait 0.5 sec
			delay_ms(500);
  d6:	24 ef       	ldi	r18, 0xF4	; 244
  d8:	31 e0       	ldi	r19, 0x01	; 1
  da:	40 e0       	ldi	r20, 0x00	; 0
  dc:	50 e0       	ldi	r21, 0x00	; 0
  de:	60 e0       	ldi	r22, 0x00	; 0
  e0:	70 e0       	ldi	r23, 0x00	; 0
  e2:	80 e0       	ldi	r24, 0x00	; 0
  e4:	90 e0       	ldi	r25, 0x00	; 0
  e6:	0e 94 4d 01 	call	0x29a	; 0x29a <delay_ms>
			//get out of loop if ped mode is activated
			if(pedMode==1)break;
  ea:	80 91 60 00 	lds	r24, 0x0060
  ee:	81 30       	cpi	r24, 0x01	; 1
  f0:	11 f0       	breq	.+4      	; 0xf6 <yellow_blink+0x44>
  f2:	21 97       	sbiw	r28, 0x01	; 1
void yellow_blink(EN_mode_t mode)
{
	int counter;
	switch(mode){
		case NORMAL_YELLOW_BLINK: //case car yellow only blinking in normal mode
		for(counter=0;counter<10;counter++) // toggle led 10 times each of 0.5 sec of total 5 sec
  f4:	41 f7       	brne	.-48     	; 0xc6 <yellow_blink+0x14>
			delay_ms(500);
			//get out of loop if ped mode is activated
			if(pedMode==1)break;
		}
		// turn yellow LEDs off
		LED_off(CAR_PORT, YELLOW_LED);
  f6:	61 e0       	ldi	r22, 0x01	; 1
  f8:	81 e4       	ldi	r24, 0x41	; 65
  fa:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		LED_off(PED_PORT, YELLOW_LED);
  fe:	61 e0       	ldi	r22, 0x01	; 1
 100:	82 e4       	ldi	r24, 0x42	; 66
 102:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		break;
 106:	1e c0       	rjmp	.+60     	; 0x144 <yellow_blink+0x92>
	
}
void yellow_blink(EN_mode_t mode)
{
	int counter;
	switch(mode){
 108:	ca e0       	ldi	r28, 0x0A	; 10
 10a:	d0 e0       	ldi	r29, 0x00	; 0
		break;
		case PED_YELLOW_BLINK: // case car and pedestrian yellow LEDs blinks together in pedestrian mode
		for(counter=0;counter<10;counter++) // toggle led 10 times each of 0.5 sec of total 5 sec
		{
			//toggle car yellow LED
			LED_toggle(CAR_PORT, YELLOW_LED);
 10c:	61 e0       	ldi	r22, 0x01	; 1
 10e:	81 e4       	ldi	r24, 0x41	; 65
 110:	0e 94 1d 02 	call	0x43a	; 0x43a <LED_toggle>
			//toggle pedestrian yellow LED
			LED_toggle(PED_PORT, YELLOW_LED);
 114:	61 e0       	ldi	r22, 0x01	; 1
 116:	82 e4       	ldi	r24, 0x42	; 66
 118:	0e 94 1d 02 	call	0x43a	; 0x43a <LED_toggle>
			// wait 0.5 sec
			delay_ms(500);
 11c:	24 ef       	ldi	r18, 0xF4	; 244
 11e:	31 e0       	ldi	r19, 0x01	; 1
 120:	40 e0       	ldi	r20, 0x00	; 0
 122:	50 e0       	ldi	r21, 0x00	; 0
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	80 e0       	ldi	r24, 0x00	; 0
 12a:	90 e0       	ldi	r25, 0x00	; 0
 12c:	0e 94 4d 01 	call	0x29a	; 0x29a <delay_ms>
 130:	21 97       	sbiw	r28, 0x01	; 1
		// turn yellow LEDs off
		LED_off(CAR_PORT, YELLOW_LED);
		LED_off(PED_PORT, YELLOW_LED);
		break;
		case PED_YELLOW_BLINK: // case car and pedestrian yellow LEDs blinks together in pedestrian mode
		for(counter=0;counter<10;counter++) // toggle led 10 times each of 0.5 sec of total 5 sec
 132:	61 f7       	brne	.-40     	; 0x10c <yellow_blink+0x5a>
			LED_toggle(PED_PORT, YELLOW_LED);
			// wait 0.5 sec
			delay_ms(500);
		}
		// turn yellow LEDs off
		LED_off(CAR_PORT, YELLOW_LED);
 134:	61 e0       	ldi	r22, 0x01	; 1
 136:	81 e4       	ldi	r24, 0x41	; 65
 138:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		LED_off(PED_PORT, YELLOW_LED);
 13c:	61 e0       	ldi	r22, 0x01	; 1
 13e:	82 e4       	ldi	r24, 0x42	; 66
 140:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		break;
		default:
		break;
		
	}
}
 144:	df 91       	pop	r29
 146:	cf 91       	pop	r28
 148:	08 95       	ret

0000014a <ped_Mode>:
	
}
void ped_Mode(void)
{
	//1.ped & car yellow_blink for 5 seconds
	yellow_blink(PED_YELLOW_BLINK);
 14a:	81 e0       	ldi	r24, 0x01	; 1
 14c:	0e 94 59 00 	call	0xb2	; 0xb2 <yellow_blink>
	//2.car green off and red on
	LED_off(CAR_PORT, GREEN_LED);
 150:	62 e0       	ldi	r22, 0x02	; 2
 152:	81 e4       	ldi	r24, 0x41	; 65
 154:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
	LED_on(CAR_PORT, RED_LED);
 158:	60 e0       	ldi	r22, 0x00	; 0
 15a:	81 e4       	ldi	r24, 0x41	; 65
 15c:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
	//3.ped red off and green on
	LED_off(PED_PORT, RED_LED);
 160:	60 e0       	ldi	r22, 0x00	; 0
 162:	82 e4       	ldi	r24, 0x42	; 66
 164:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
	LED_on(PED_PORT, GREEN_LED);
 168:	62 e0       	ldi	r22, 0x02	; 2
 16a:	82 e4       	ldi	r24, 0x42	; 66
 16c:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
	//4.wait 5 seconds
	delay_ms(5000);
 170:	28 e8       	ldi	r18, 0x88	; 136
 172:	33 e1       	ldi	r19, 0x13	; 19
 174:	40 e0       	ldi	r20, 0x00	; 0
 176:	50 e0       	ldi	r21, 0x00	; 0
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	80 e0       	ldi	r24, 0x00	; 0
 17e:	90 e0       	ldi	r25, 0x00	; 0
 180:	0e 94 4d 01 	call	0x29a	; 0x29a <delay_ms>
	//5.ped & car yellow blink for 5 seconds
	yellow_blink(PED_YELLOW_BLINK);
 184:	81 e0       	ldi	r24, 0x01	; 1
 186:	0e 94 59 00 	call	0xb2	; 0xb2 <yellow_blink>
	//6.ped green off and red on
	LED_off(PED_PORT, GREEN_LED);
 18a:	62 e0       	ldi	r22, 0x02	; 2
 18c:	82 e4       	ldi	r24, 0x42	; 66
 18e:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
	LED_on(PED_PORT, RED_LED);
 192:	60 e0       	ldi	r22, 0x00	; 0
 194:	82 e4       	ldi	r24, 0x42	; 66
 196:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
	//7.car red off
	LED_off(CAR_PORT, RED_LED);
 19a:	60 e0       	ldi	r22, 0x00	; 0
 19c:	81 e4       	ldi	r24, 0x41	; 65
 19e:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
 1a2:	08 95       	ret

000001a4 <APP_start>:
		{
			ped_Mode();
			continue;
		}
		//4.blink car yellow for 5 seconds
		pedMode=1;
 1a4:	c1 e0       	ldi	r28, 0x01	; 1

void APP_start(void)
{
	while(1)
	{
		pedMode=0;
 1a6:	10 92 60 00 	sts	0x0060, r1
		//1.turn car green and ped red on
		LED_on(CAR_PORT, GREEN_LED);
 1aa:	62 e0       	ldi	r22, 0x02	; 2
 1ac:	81 e4       	ldi	r24, 0x41	; 65
 1ae:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
		LED_on(PED_PORT, RED_LED);
 1b2:	60 e0       	ldi	r22, 0x00	; 0
 1b4:	82 e4       	ldi	r24, 0x42	; 66
 1b6:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
		//2.wait 5 seconds
		delay_ms(5000);
 1ba:	28 e8       	ldi	r18, 0x88	; 136
 1bc:	33 e1       	ldi	r19, 0x13	; 19
 1be:	40 e0       	ldi	r20, 0x00	; 0
 1c0:	50 e0       	ldi	r21, 0x00	; 0
 1c2:	60 e0       	ldi	r22, 0x00	; 0
 1c4:	70 e0       	ldi	r23, 0x00	; 0
 1c6:	80 e0       	ldi	r24, 0x00	; 0
 1c8:	90 e0       	ldi	r25, 0x00	; 0
 1ca:	0e 94 4d 01 	call	0x29a	; 0x29a <delay_ms>
		//3.if pedMode==1 start pedmode then continue
		if(pedMode==1)
 1ce:	90 91 60 00 	lds	r25, 0x0060
 1d2:	91 30       	cpi	r25, 0x01	; 1
 1d4:	19 f4       	brne	.+6      	; 0x1dc <APP_start+0x38>
		{
			ped_Mode();
 1d6:	0e 94 a5 00 	call	0x14a	; 0x14a <ped_Mode>
			continue;
 1da:	e5 cf       	rjmp	.-54     	; 0x1a6 <APP_start+0x2>
		}
		//4.blink car yellow for 5 seconds
		pedMode=1;
 1dc:	c0 93 60 00 	sts	0x0060, r28
		yellow_blink(PED_YELLOW_BLINK);
 1e0:	8c 2f       	mov	r24, r28
 1e2:	0e 94 59 00 	call	0xb2	; 0xb2 <yellow_blink>
		//5.turn car green and ped red off
		LED_off(CAR_PORT, GREEN_LED);
 1e6:	62 e0       	ldi	r22, 0x02	; 2
 1e8:	81 e4       	ldi	r24, 0x41	; 65
 1ea:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		LED_off(PED_PORT, RED_LED);
 1ee:	60 e0       	ldi	r22, 0x00	; 0
 1f0:	82 e4       	ldi	r24, 0x42	; 66
 1f2:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		//6.turn car red and ped green on
		LED_on(CAR_PORT, RED_LED);
 1f6:	60 e0       	ldi	r22, 0x00	; 0
 1f8:	81 e4       	ldi	r24, 0x41	; 65
 1fa:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
		LED_on(PED_PORT, GREEN_LED);
 1fe:	62 e0       	ldi	r22, 0x02	; 2
 200:	82 e4       	ldi	r24, 0x42	; 66
 202:	0e 94 01 02 	call	0x402	; 0x402 <LED_on>
		//7.wait 5 seconds
		delay_ms(5000);
 206:	28 e8       	ldi	r18, 0x88	; 136
 208:	33 e1       	ldi	r19, 0x13	; 19
 20a:	40 e0       	ldi	r20, 0x00	; 0
 20c:	50 e0       	ldi	r21, 0x00	; 0
 20e:	60 e0       	ldi	r22, 0x00	; 0
 210:	70 e0       	ldi	r23, 0x00	; 0
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	0e 94 4d 01 	call	0x29a	; 0x29a <delay_ms>
		//8.blink car yellow for 5 seconds
		pedMode=0;
 21a:	10 92 60 00 	sts	0x0060, r1
		yellow_blink(NORMAL_YELLOW_BLINK);
 21e:	80 e0       	ldi	r24, 0x00	; 0
 220:	0e 94 59 00 	call	0xb2	; 0xb2 <yellow_blink>
		//9.if pedMode==1 start pedmode then continue
		if(pedMode==1)
 224:	80 91 60 00 	lds	r24, 0x0060
 228:	81 30       	cpi	r24, 0x01	; 1
 22a:	19 f4       	brne	.+6      	; 0x232 <APP_start+0x8e>
		{
			ped_Mode();
 22c:	0e 94 a5 00 	call	0x14a	; 0x14a <ped_Mode>
			continue;
 230:	ba cf       	rjmp	.-140    	; 0x1a6 <APP_start+0x2>
		}	
		//10.turn car red and ped green off
		LED_off(CAR_PORT, RED_LED);
 232:	60 e0       	ldi	r22, 0x00	; 0
 234:	81 e4       	ldi	r24, 0x41	; 65
 236:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
		LED_off(PED_PORT, GREEN_LED);
 23a:	62 e0       	ldi	r22, 0x02	; 2
 23c:	82 e4       	ldi	r24, 0x42	; 66
 23e:	0e 94 0f 02 	call	0x41e	; 0x41e <LED_off>
 242:	b1 cf       	rjmp	.-158    	; 0x1a6 <APP_start+0x2>

00000244 <__vector_1>:
		
	}
}

ISR(EXT_INT_0)
{
 244:	1f 92       	push	r1
 246:	0f 92       	push	r0
 248:	0f b6       	in	r0, 0x3f	; 63
 24a:	0f 92       	push	r0
 24c:	11 24       	eor	r1, r1
 24e:	2f 93       	push	r18
 250:	3f 93       	push	r19
 252:	4f 93       	push	r20
 254:	5f 93       	push	r21
 256:	6f 93       	push	r22
 258:	7f 93       	push	r23
 25a:	8f 93       	push	r24
 25c:	9f 93       	push	r25
 25e:	af 93       	push	r26
 260:	bf 93       	push	r27
 262:	ef 93       	push	r30
 264:	ff 93       	push	r31
	//activate pedestrian mode if is not activated and stop timer
	if (pedMode==0) 
 266:	80 91 60 00 	lds	r24, 0x0060
 26a:	81 11       	cpse	r24, r1
 26c:	05 c0       	rjmp	.+10     	; 0x278 <__vector_1+0x34>
	{
		pedMode=1;
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	80 93 60 00 	sts	0x0060, r24
		TIMER0_stop();
 274:	0e 94 ca 03 	call	0x794	; 0x794 <TIMER0_stop>
	}
 278:	ff 91       	pop	r31
 27a:	ef 91       	pop	r30
 27c:	bf 91       	pop	r27
 27e:	af 91       	pop	r26
 280:	9f 91       	pop	r25
 282:	8f 91       	pop	r24
 284:	7f 91       	pop	r23
 286:	6f 91       	pop	r22
 288:	5f 91       	pop	r21
 28a:	4f 91       	pop	r20
 28c:	3f 91       	pop	r19
 28e:	2f 91       	pop	r18
 290:	0f 90       	pop	r0
 292:	0f be       	out	0x3f, r0	; 63
 294:	0f 90       	pop	r0
 296:	1f 90       	pop	r1
 298:	18 95       	reti

0000029a <delay_ms>:
 29a:	cf 92       	push	r12
 29c:	df 92       	push	r13
 29e:	ef 92       	push	r14
 2a0:	ff 92       	push	r15
 2a2:	0f 93       	push	r16
 2a4:	1f 93       	push	r17
 2a6:	cf 93       	push	r28
 2a8:	df 93       	push	r29
 2aa:	0e 94 5c 05 	call	0xab8	; 0xab8 <__floatundisf>
 2ae:	6b 01       	movw	r12, r22
 2b0:	7c 01       	movw	r14, r24
 2b2:	2f e6       	ldi	r18, 0x6F	; 111
 2b4:	32 e1       	ldi	r19, 0x12	; 18
 2b6:	43 e8       	ldi	r20, 0x83	; 131
 2b8:	53 e4       	ldi	r21, 0x43	; 67
 2ba:	0e 94 4d 04 	call	0x89a	; 0x89a <__cmpsf2>
 2be:	88 23       	and	r24, r24
 2c0:	cc f4       	brge	.+50     	; 0x2f4 <delay_ms+0x5a>
 2c2:	a7 01       	movw	r20, r14
 2c4:	96 01       	movw	r18, r12
 2c6:	6f e6       	ldi	r22, 0x6F	; 111
 2c8:	72 e1       	ldi	r23, 0x12	; 18
 2ca:	83 e8       	ldi	r24, 0x83	; 131
 2cc:	93 e4       	ldi	r25, 0x43	; 67
 2ce:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__subsf3>
 2d2:	2f e6       	ldi	r18, 0x6F	; 111
 2d4:	32 e1       	ldi	r19, 0x12	; 18
 2d6:	43 e8       	ldi	r20, 0x83	; 131
 2d8:	5f e3       	ldi	r21, 0x3F	; 63
 2da:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__divsf3>
 2de:	0e 94 be 04 	call	0x97c	; 0x97c <__fixunssfdi>
 2e2:	02 2f       	mov	r16, r18
 2e4:	13 2f       	mov	r17, r19
 2e6:	d4 2f       	mov	r29, r20
 2e8:	c5 2e       	mov	r12, r21
 2ea:	d6 2e       	mov	r13, r22
 2ec:	e7 2e       	mov	r14, r23
 2ee:	f8 2e       	mov	r15, r24
 2f0:	c9 2f       	mov	r28, r25
 2f2:	58 c0       	rjmp	.+176    	; 0x3a4 <delay_ms+0x10a>
 2f4:	2f e6       	ldi	r18, 0x6F	; 111
 2f6:	32 e1       	ldi	r19, 0x12	; 18
 2f8:	43 e8       	ldi	r20, 0x83	; 131
 2fa:	53 e4       	ldi	r21, 0x43	; 67
 2fc:	c7 01       	movw	r24, r14
 2fe:	b6 01       	movw	r22, r12
 300:	0e 94 4d 04 	call	0x89a	; 0x89a <__cmpsf2>
 304:	88 23       	and	r24, r24
 306:	09 f4       	brne	.+2      	; 0x30a <delay_ms+0x70>
 308:	45 c0       	rjmp	.+138    	; 0x394 <delay_ms+0xfa>
 30a:	2f e6       	ldi	r18, 0x6F	; 111
 30c:	32 e1       	ldi	r19, 0x12	; 18
 30e:	43 e8       	ldi	r20, 0x83	; 131
 310:	53 e4       	ldi	r21, 0x43	; 67
 312:	c7 01       	movw	r24, r14
 314:	b6 01       	movw	r22, r12
 316:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__divsf3>
 31a:	0e 94 3a 04 	call	0x874	; 0x874 <ceil>
 31e:	0e 94 f3 04 	call	0x9e6	; 0x9e6 <__fixunssfsi>
 322:	c6 2f       	mov	r28, r22
 324:	0e 94 c4 03 	call	0x788	; 0x788 <TIMER0_init>
 328:	2f e6       	ldi	r18, 0x6F	; 111
 32a:	32 e1       	ldi	r19, 0x12	; 18
 32c:	43 e8       	ldi	r20, 0x83	; 131
 32e:	5f e3       	ldi	r21, 0x3F	; 63
 330:	c7 01       	movw	r24, r14
 332:	b6 01       	movw	r22, r12
 334:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__divsf3>
 338:	6b 01       	movw	r12, r22
 33a:	7c 01       	movw	r14, r24
 33c:	6c 2f       	mov	r22, r28
 33e:	70 e0       	ldi	r23, 0x00	; 0
 340:	80 e0       	ldi	r24, 0x00	; 0
 342:	90 e0       	ldi	r25, 0x00	; 0
 344:	0e 94 21 05 	call	0xa42	; 0xa42 <__floatsisf>
 348:	9b 01       	movw	r18, r22
 34a:	ac 01       	movw	r20, r24
 34c:	c7 01       	movw	r24, r14
 34e:	b6 01       	movw	r22, r12
 350:	0e 94 51 04 	call	0x8a2	; 0x8a2 <__divsf3>
 354:	9b 01       	movw	r18, r22
 356:	ac 01       	movw	r20, r24
 358:	60 e0       	ldi	r22, 0x00	; 0
 35a:	70 e0       	ldi	r23, 0x00	; 0
 35c:	80 e8       	ldi	r24, 0x80	; 128
 35e:	93 e4       	ldi	r25, 0x43	; 67
 360:	0e 94 d5 03 	call	0x7aa	; 0x7aa <__subsf3>
 364:	0e 94 be 04 	call	0x97c	; 0x97c <__fixunssfdi>
 368:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <TIMER0_set>
 36c:	0e 94 c6 03 	call	0x78c	; 0x78c <TIMER0_start>
 370:	c1 11       	cpse	r28, r1
 372:	27 c0       	rjmp	.+78     	; 0x3c2 <delay_ms+0x128>
 374:	0c c0       	rjmp	.+24     	; 0x38e <delay_ms+0xf4>
 376:	0e 94 d2 03 	call	0x7a4	; 0x7a4 <TIMER0_get>
 37a:	81 11       	cpse	r24, r1
 37c:	03 c0       	rjmp	.+6      	; 0x384 <delay_ms+0xea>
 37e:	83 b7       	in	r24, 0x33	; 51
 380:	81 11       	cpse	r24, r1
 382:	f9 cf       	rjmp	.-14     	; 0x376 <delay_ms+0xdc>
 384:	0e 94 cc 03 	call	0x798	; 0x798 <TIMER0_clear>
 388:	f3 94       	inc	r15
 38a:	fc 16       	cp	r15, r28
 38c:	a0 f3       	brcs	.-24     	; 0x376 <delay_ms+0xdc>
 38e:	0e 94 ca 03 	call	0x794	; 0x794 <TIMER0_stop>
 392:	19 c0       	rjmp	.+50     	; 0x3c6 <delay_ms+0x12c>
 394:	00 e0       	ldi	r16, 0x00	; 0
 396:	10 e0       	ldi	r17, 0x00	; 0
 398:	d0 e0       	ldi	r29, 0x00	; 0
 39a:	c1 2c       	mov	r12, r1
 39c:	d1 2c       	mov	r13, r1
 39e:	e1 2c       	mov	r14, r1
 3a0:	f1 2c       	mov	r15, r1
 3a2:	c0 e0       	ldi	r28, 0x00	; 0
 3a4:	0e 94 c4 03 	call	0x788	; 0x788 <TIMER0_init>
 3a8:	20 2f       	mov	r18, r16
 3aa:	31 2f       	mov	r19, r17
 3ac:	4d 2f       	mov	r20, r29
 3ae:	5c 2d       	mov	r21, r12
 3b0:	6d 2d       	mov	r22, r13
 3b2:	7e 2d       	mov	r23, r14
 3b4:	8f 2d       	mov	r24, r15
 3b6:	9c 2f       	mov	r25, r28
 3b8:	0e 94 d0 03 	call	0x7a0	; 0x7a0 <TIMER0_set>
 3bc:	0e 94 c6 03 	call	0x78c	; 0x78c <TIMER0_start>
 3c0:	c1 e0       	ldi	r28, 0x01	; 1
 3c2:	f1 2c       	mov	r15, r1
 3c4:	d8 cf       	rjmp	.-80     	; 0x376 <delay_ms+0xdc>
 3c6:	df 91       	pop	r29
 3c8:	cf 91       	pop	r28
 3ca:	1f 91       	pop	r17
 3cc:	0f 91       	pop	r16
 3ce:	ff 90       	pop	r15
 3d0:	ef 90       	pop	r14
 3d2:	df 90       	pop	r13
 3d4:	cf 90       	pop	r12
 3d6:	08 95       	ret

000003d8 <ExtInt0_init>:
 */ 
#include "ext_int.h"

void ExtInt0_init(void) //initalizes external interrupt 0 on rising edge
{
	INT_sei(); //enable global interrupts
 3d8:	0e 94 ba 03 	call	0x774	; 0x774 <INT_sei>
	INT0_rising();		// choose external interrupt sense (rising edge)
 3dc:	0e 94 bc 03 	call	0x778	; 0x778 <INT0_rising>
	INT0_enable();		// Enable external interrupt 0 (INT0)
 3e0:	0e 94 c0 03 	call	0x780	; 0x780 <INT0_enable>
 3e4:	08 95       	ret

000003e6 <LED_init>:
 3e6:	41 e0       	ldi	r20, 0x01	; 1
 3e8:	0e 94 31 02 	call	0x462	; 0x462 <DIO_init>
 3ec:	88 23       	and	r24, r24
 3ee:	19 f0       	breq	.+6      	; 0x3f6 <LED_init+0x10>
 3f0:	83 30       	cpi	r24, 0x03	; 3
 3f2:	19 f4       	brne	.+6      	; 0x3fa <LED_init+0x14>
 3f4:	04 c0       	rjmp	.+8      	; 0x3fe <LED_init+0x18>
 3f6:	80 e0       	ldi	r24, 0x00	; 0
 3f8:	08 95       	ret
 3fa:	82 e0       	ldi	r24, 0x02	; 2
 3fc:	08 95       	ret
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	08 95       	ret

00000402 <LED_on>:
 402:	41 e0       	ldi	r20, 0x01	; 1
 404:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <DIO_write>
 408:	88 23       	and	r24, r24
 40a:	19 f0       	breq	.+6      	; 0x412 <LED_on+0x10>
 40c:	83 30       	cpi	r24, 0x03	; 3
 40e:	19 f4       	brne	.+6      	; 0x416 <LED_on+0x14>
 410:	04 c0       	rjmp	.+8      	; 0x41a <LED_on+0x18>
 412:	80 e0       	ldi	r24, 0x00	; 0
 414:	08 95       	ret
 416:	82 e0       	ldi	r24, 0x02	; 2
 418:	08 95       	ret
 41a:	81 e0       	ldi	r24, 0x01	; 1
 41c:	08 95       	ret

0000041e <LED_off>:
 41e:	40 e0       	ldi	r20, 0x00	; 0
 420:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <DIO_write>
 424:	88 23       	and	r24, r24
 426:	19 f0       	breq	.+6      	; 0x42e <LED_off+0x10>
 428:	83 30       	cpi	r24, 0x03	; 3
 42a:	19 f4       	brne	.+6      	; 0x432 <LED_off+0x14>
 42c:	04 c0       	rjmp	.+8      	; 0x436 <LED_off+0x18>
 42e:	80 e0       	ldi	r24, 0x00	; 0
 430:	08 95       	ret
 432:	82 e0       	ldi	r24, 0x02	; 2
 434:	08 95       	ret
 436:	81 e0       	ldi	r24, 0x01	; 1
 438:	08 95       	ret

0000043a <LED_toggle>:
 43a:	0e 94 6f 03 	call	0x6de	; 0x6de <DIO_toggle>
 43e:	88 23       	and	r24, r24
 440:	19 f0       	breq	.+6      	; 0x448 <LED_toggle+0xe>
 442:	83 30       	cpi	r24, 0x03	; 3
 444:	19 f4       	brne	.+6      	; 0x44c <LED_toggle+0x12>
 446:	04 c0       	rjmp	.+8      	; 0x450 <LED_toggle+0x16>
 448:	80 e0       	ldi	r24, 0x00	; 0
 44a:	08 95       	ret
 44c:	82 e0       	ldi	r24, 0x02	; 2
 44e:	08 95       	ret
 450:	81 e0       	ldi	r24, 0x01	; 1
 452:	08 95       	ret

00000454 <main>:
 */ 

#include "Application/app.h"
int main(void)
{
	APP_init();
 454:	0e 94 3e 00 	call	0x7c	; 0x7c <APP_init>
	APP_start();
 458:	0e 94 d2 00 	call	0x1a4	; 0x1a4 <APP_start>
	LED_toggle(PORT_A,4);
	LED_toggle(PORT_A,4);
	delay_ms(300);
	LED_toggle(PORT_A,4);*/
	return 0;	
 45c:	80 e0       	ldi	r24, 0x00	; 0
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	08 95       	ret

00000462 <DIO_init>:
 462:	68 30       	cpi	r22, 0x08	; 8
 464:	08 f0       	brcs	.+2      	; 0x468 <DIO_init+0x6>
 466:	90 c0       	rjmp	.+288    	; 0x588 <DIO_init+0x126>
 468:	82 34       	cpi	r24, 0x42	; 66
 46a:	69 f1       	breq	.+90     	; 0x4c6 <DIO_init+0x64>
 46c:	20 f4       	brcc	.+8      	; 0x476 <DIO_init+0x14>
 46e:	81 34       	cpi	r24, 0x41	; 65
 470:	09 f0       	breq	.+2      	; 0x474 <DIO_init+0x12>
 472:	8c c0       	rjmp	.+280    	; 0x58c <DIO_init+0x12a>
 474:	07 c0       	rjmp	.+14     	; 0x484 <DIO_init+0x22>
 476:	83 34       	cpi	r24, 0x43	; 67
 478:	09 f4       	brne	.+2      	; 0x47c <DIO_init+0x1a>
 47a:	46 c0       	rjmp	.+140    	; 0x508 <DIO_init+0xa6>
 47c:	84 34       	cpi	r24, 0x44	; 68
 47e:	09 f0       	breq	.+2      	; 0x482 <DIO_init+0x20>
 480:	85 c0       	rjmp	.+266    	; 0x58c <DIO_init+0x12a>
 482:	62 c0       	rjmp	.+196    	; 0x548 <DIO_init+0xe6>
 484:	41 11       	cpse	r20, r1
 486:	0f c0       	rjmp	.+30     	; 0x4a6 <DIO_init+0x44>
 488:	2a b3       	in	r18, 0x1a	; 26
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	ac 01       	movw	r20, r24
 490:	02 c0       	rjmp	.+4      	; 0x496 <DIO_init+0x34>
 492:	44 0f       	add	r20, r20
 494:	55 1f       	adc	r21, r21
 496:	6a 95       	dec	r22
 498:	e2 f7       	brpl	.-8      	; 0x492 <DIO_init+0x30>
 49a:	ba 01       	movw	r22, r20
 49c:	60 95       	com	r22
 49e:	62 23       	and	r22, r18
 4a0:	6a bb       	out	0x1a, r22	; 26
 4a2:	80 e0       	ldi	r24, 0x00	; 0
 4a4:	08 95       	ret
 4a6:	41 30       	cpi	r20, 0x01	; 1
 4a8:	09 f0       	breq	.+2      	; 0x4ac <DIO_init+0x4a>
 4aa:	72 c0       	rjmp	.+228    	; 0x590 <DIO_init+0x12e>
 4ac:	4a b3       	in	r20, 0x1a	; 26
 4ae:	21 e0       	ldi	r18, 0x01	; 1
 4b0:	30 e0       	ldi	r19, 0x00	; 0
 4b2:	c9 01       	movw	r24, r18
 4b4:	02 c0       	rjmp	.+4      	; 0x4ba <DIO_init+0x58>
 4b6:	88 0f       	add	r24, r24
 4b8:	99 1f       	adc	r25, r25
 4ba:	6a 95       	dec	r22
 4bc:	e2 f7       	brpl	.-8      	; 0x4b6 <DIO_init+0x54>
 4be:	84 2b       	or	r24, r20
 4c0:	8a bb       	out	0x1a, r24	; 26
 4c2:	80 e0       	ldi	r24, 0x00	; 0
 4c4:	08 95       	ret
 4c6:	41 11       	cpse	r20, r1
 4c8:	0f c0       	rjmp	.+30     	; 0x4e8 <DIO_init+0x86>
 4ca:	27 b3       	in	r18, 0x17	; 23
 4cc:	81 e0       	ldi	r24, 0x01	; 1
 4ce:	90 e0       	ldi	r25, 0x00	; 0
 4d0:	ac 01       	movw	r20, r24
 4d2:	02 c0       	rjmp	.+4      	; 0x4d8 <DIO_init+0x76>
 4d4:	44 0f       	add	r20, r20
 4d6:	55 1f       	adc	r21, r21
 4d8:	6a 95       	dec	r22
 4da:	e2 f7       	brpl	.-8      	; 0x4d4 <DIO_init+0x72>
 4dc:	ba 01       	movw	r22, r20
 4de:	60 95       	com	r22
 4e0:	62 23       	and	r22, r18
 4e2:	67 bb       	out	0x17, r22	; 23
 4e4:	80 e0       	ldi	r24, 0x00	; 0
 4e6:	08 95       	ret
 4e8:	41 30       	cpi	r20, 0x01	; 1
 4ea:	09 f0       	breq	.+2      	; 0x4ee <DIO_init+0x8c>
 4ec:	53 c0       	rjmp	.+166    	; 0x594 <DIO_init+0x132>
 4ee:	47 b3       	in	r20, 0x17	; 23
 4f0:	21 e0       	ldi	r18, 0x01	; 1
 4f2:	30 e0       	ldi	r19, 0x00	; 0
 4f4:	c9 01       	movw	r24, r18
 4f6:	02 c0       	rjmp	.+4      	; 0x4fc <DIO_init+0x9a>
 4f8:	88 0f       	add	r24, r24
 4fa:	99 1f       	adc	r25, r25
 4fc:	6a 95       	dec	r22
 4fe:	e2 f7       	brpl	.-8      	; 0x4f8 <DIO_init+0x96>
 500:	84 2b       	or	r24, r20
 502:	87 bb       	out	0x17, r24	; 23
 504:	80 e0       	ldi	r24, 0x00	; 0
 506:	08 95       	ret
 508:	41 11       	cpse	r20, r1
 50a:	0f c0       	rjmp	.+30     	; 0x52a <DIO_init+0xc8>
 50c:	24 b3       	in	r18, 0x14	; 20
 50e:	81 e0       	ldi	r24, 0x01	; 1
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	ac 01       	movw	r20, r24
 514:	02 c0       	rjmp	.+4      	; 0x51a <DIO_init+0xb8>
 516:	44 0f       	add	r20, r20
 518:	55 1f       	adc	r21, r21
 51a:	6a 95       	dec	r22
 51c:	e2 f7       	brpl	.-8      	; 0x516 <DIO_init+0xb4>
 51e:	ba 01       	movw	r22, r20
 520:	60 95       	com	r22
 522:	62 23       	and	r22, r18
 524:	64 bb       	out	0x14, r22	; 20
 526:	80 e0       	ldi	r24, 0x00	; 0
 528:	08 95       	ret
 52a:	41 30       	cpi	r20, 0x01	; 1
 52c:	a9 f5       	brne	.+106    	; 0x598 <DIO_init+0x136>
 52e:	44 b3       	in	r20, 0x14	; 20
 530:	21 e0       	ldi	r18, 0x01	; 1
 532:	30 e0       	ldi	r19, 0x00	; 0
 534:	c9 01       	movw	r24, r18
 536:	02 c0       	rjmp	.+4      	; 0x53c <DIO_init+0xda>
 538:	88 0f       	add	r24, r24
 53a:	99 1f       	adc	r25, r25
 53c:	6a 95       	dec	r22
 53e:	e2 f7       	brpl	.-8      	; 0x538 <DIO_init+0xd6>
 540:	84 2b       	or	r24, r20
 542:	84 bb       	out	0x14, r24	; 20
 544:	80 e0       	ldi	r24, 0x00	; 0
 546:	08 95       	ret
 548:	41 11       	cpse	r20, r1
 54a:	0f c0       	rjmp	.+30     	; 0x56a <DIO_init+0x108>
 54c:	21 b3       	in	r18, 0x11	; 17
 54e:	81 e0       	ldi	r24, 0x01	; 1
 550:	90 e0       	ldi	r25, 0x00	; 0
 552:	ac 01       	movw	r20, r24
 554:	02 c0       	rjmp	.+4      	; 0x55a <DIO_init+0xf8>
 556:	44 0f       	add	r20, r20
 558:	55 1f       	adc	r21, r21
 55a:	6a 95       	dec	r22
 55c:	e2 f7       	brpl	.-8      	; 0x556 <DIO_init+0xf4>
 55e:	ba 01       	movw	r22, r20
 560:	60 95       	com	r22
 562:	62 23       	and	r22, r18
 564:	61 bb       	out	0x11, r22	; 17
 566:	80 e0       	ldi	r24, 0x00	; 0
 568:	08 95       	ret
 56a:	41 30       	cpi	r20, 0x01	; 1
 56c:	b9 f4       	brne	.+46     	; 0x59c <DIO_init+0x13a>
 56e:	41 b3       	in	r20, 0x11	; 17
 570:	21 e0       	ldi	r18, 0x01	; 1
 572:	30 e0       	ldi	r19, 0x00	; 0
 574:	c9 01       	movw	r24, r18
 576:	02 c0       	rjmp	.+4      	; 0x57c <DIO_init+0x11a>
 578:	88 0f       	add	r24, r24
 57a:	99 1f       	adc	r25, r25
 57c:	6a 95       	dec	r22
 57e:	e2 f7       	brpl	.-8      	; 0x578 <DIO_init+0x116>
 580:	84 2b       	or	r24, r20
 582:	81 bb       	out	0x11, r24	; 17
 584:	80 e0       	ldi	r24, 0x00	; 0
 586:	08 95       	ret
 588:	84 e0       	ldi	r24, 0x04	; 4
 58a:	08 95       	ret
 58c:	83 e0       	ldi	r24, 0x03	; 3
 58e:	08 95       	ret
 590:	81 e0       	ldi	r24, 0x01	; 1
 592:	08 95       	ret
 594:	81 e0       	ldi	r24, 0x01	; 1
 596:	08 95       	ret
 598:	81 e0       	ldi	r24, 0x01	; 1
 59a:	08 95       	ret
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	08 95       	ret

000005a0 <DIO_write>:
 5a0:	68 30       	cpi	r22, 0x08	; 8
 5a2:	08 f0       	brcs	.+2      	; 0x5a6 <DIO_write+0x6>
 5a4:	90 c0       	rjmp	.+288    	; 0x6c6 <DIO_write+0x126>
 5a6:	82 34       	cpi	r24, 0x42	; 66
 5a8:	69 f1       	breq	.+90     	; 0x604 <DIO_write+0x64>
 5aa:	20 f4       	brcc	.+8      	; 0x5b4 <DIO_write+0x14>
 5ac:	81 34       	cpi	r24, 0x41	; 65
 5ae:	09 f0       	breq	.+2      	; 0x5b2 <DIO_write+0x12>
 5b0:	8c c0       	rjmp	.+280    	; 0x6ca <DIO_write+0x12a>
 5b2:	07 c0       	rjmp	.+14     	; 0x5c2 <DIO_write+0x22>
 5b4:	83 34       	cpi	r24, 0x43	; 67
 5b6:	09 f4       	brne	.+2      	; 0x5ba <DIO_write+0x1a>
 5b8:	46 c0       	rjmp	.+140    	; 0x646 <DIO_write+0xa6>
 5ba:	84 34       	cpi	r24, 0x44	; 68
 5bc:	09 f0       	breq	.+2      	; 0x5c0 <DIO_write+0x20>
 5be:	85 c0       	rjmp	.+266    	; 0x6ca <DIO_write+0x12a>
 5c0:	62 c0       	rjmp	.+196    	; 0x686 <DIO_write+0xe6>
 5c2:	41 11       	cpse	r20, r1
 5c4:	0f c0       	rjmp	.+30     	; 0x5e4 <DIO_write+0x44>
 5c6:	2b b3       	in	r18, 0x1b	; 27
 5c8:	81 e0       	ldi	r24, 0x01	; 1
 5ca:	90 e0       	ldi	r25, 0x00	; 0
 5cc:	ac 01       	movw	r20, r24
 5ce:	02 c0       	rjmp	.+4      	; 0x5d4 <DIO_write+0x34>
 5d0:	44 0f       	add	r20, r20
 5d2:	55 1f       	adc	r21, r21
 5d4:	6a 95       	dec	r22
 5d6:	e2 f7       	brpl	.-8      	; 0x5d0 <DIO_write+0x30>
 5d8:	ba 01       	movw	r22, r20
 5da:	60 95       	com	r22
 5dc:	62 23       	and	r22, r18
 5de:	6b bb       	out	0x1b, r22	; 27
 5e0:	80 e0       	ldi	r24, 0x00	; 0
 5e2:	08 95       	ret
 5e4:	41 30       	cpi	r20, 0x01	; 1
 5e6:	09 f0       	breq	.+2      	; 0x5ea <DIO_write+0x4a>
 5e8:	72 c0       	rjmp	.+228    	; 0x6ce <DIO_write+0x12e>
 5ea:	4b b3       	in	r20, 0x1b	; 27
 5ec:	21 e0       	ldi	r18, 0x01	; 1
 5ee:	30 e0       	ldi	r19, 0x00	; 0
 5f0:	c9 01       	movw	r24, r18
 5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <DIO_write+0x58>
 5f4:	88 0f       	add	r24, r24
 5f6:	99 1f       	adc	r25, r25
 5f8:	6a 95       	dec	r22
 5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <DIO_write+0x54>
 5fc:	84 2b       	or	r24, r20
 5fe:	8b bb       	out	0x1b, r24	; 27
 600:	80 e0       	ldi	r24, 0x00	; 0
 602:	08 95       	ret
 604:	41 11       	cpse	r20, r1
 606:	0f c0       	rjmp	.+30     	; 0x626 <DIO_write+0x86>
 608:	28 b3       	in	r18, 0x18	; 24
 60a:	81 e0       	ldi	r24, 0x01	; 1
 60c:	90 e0       	ldi	r25, 0x00	; 0
 60e:	ac 01       	movw	r20, r24
 610:	02 c0       	rjmp	.+4      	; 0x616 <DIO_write+0x76>
 612:	44 0f       	add	r20, r20
 614:	55 1f       	adc	r21, r21
 616:	6a 95       	dec	r22
 618:	e2 f7       	brpl	.-8      	; 0x612 <DIO_write+0x72>
 61a:	ba 01       	movw	r22, r20
 61c:	60 95       	com	r22
 61e:	62 23       	and	r22, r18
 620:	68 bb       	out	0x18, r22	; 24
 622:	80 e0       	ldi	r24, 0x00	; 0
 624:	08 95       	ret
 626:	41 30       	cpi	r20, 0x01	; 1
 628:	09 f0       	breq	.+2      	; 0x62c <DIO_write+0x8c>
 62a:	53 c0       	rjmp	.+166    	; 0x6d2 <DIO_write+0x132>
 62c:	48 b3       	in	r20, 0x18	; 24
 62e:	21 e0       	ldi	r18, 0x01	; 1
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	c9 01       	movw	r24, r18
 634:	02 c0       	rjmp	.+4      	; 0x63a <DIO_write+0x9a>
 636:	88 0f       	add	r24, r24
 638:	99 1f       	adc	r25, r25
 63a:	6a 95       	dec	r22
 63c:	e2 f7       	brpl	.-8      	; 0x636 <DIO_write+0x96>
 63e:	84 2b       	or	r24, r20
 640:	88 bb       	out	0x18, r24	; 24
 642:	80 e0       	ldi	r24, 0x00	; 0
 644:	08 95       	ret
 646:	41 11       	cpse	r20, r1
 648:	0f c0       	rjmp	.+30     	; 0x668 <DIO_write+0xc8>
 64a:	25 b3       	in	r18, 0x15	; 21
 64c:	81 e0       	ldi	r24, 0x01	; 1
 64e:	90 e0       	ldi	r25, 0x00	; 0
 650:	ac 01       	movw	r20, r24
 652:	02 c0       	rjmp	.+4      	; 0x658 <DIO_write+0xb8>
 654:	44 0f       	add	r20, r20
 656:	55 1f       	adc	r21, r21
 658:	6a 95       	dec	r22
 65a:	e2 f7       	brpl	.-8      	; 0x654 <DIO_write+0xb4>
 65c:	ba 01       	movw	r22, r20
 65e:	60 95       	com	r22
 660:	62 23       	and	r22, r18
 662:	65 bb       	out	0x15, r22	; 21
 664:	80 e0       	ldi	r24, 0x00	; 0
 666:	08 95       	ret
 668:	41 30       	cpi	r20, 0x01	; 1
 66a:	a9 f5       	brne	.+106    	; 0x6d6 <DIO_write+0x136>
 66c:	45 b3       	in	r20, 0x15	; 21
 66e:	21 e0       	ldi	r18, 0x01	; 1
 670:	30 e0       	ldi	r19, 0x00	; 0
 672:	c9 01       	movw	r24, r18
 674:	02 c0       	rjmp	.+4      	; 0x67a <DIO_write+0xda>
 676:	88 0f       	add	r24, r24
 678:	99 1f       	adc	r25, r25
 67a:	6a 95       	dec	r22
 67c:	e2 f7       	brpl	.-8      	; 0x676 <DIO_write+0xd6>
 67e:	84 2b       	or	r24, r20
 680:	85 bb       	out	0x15, r24	; 21
 682:	80 e0       	ldi	r24, 0x00	; 0
 684:	08 95       	ret
 686:	41 11       	cpse	r20, r1
 688:	0f c0       	rjmp	.+30     	; 0x6a8 <DIO_write+0x108>
 68a:	22 b3       	in	r18, 0x12	; 18
 68c:	81 e0       	ldi	r24, 0x01	; 1
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	ac 01       	movw	r20, r24
 692:	02 c0       	rjmp	.+4      	; 0x698 <DIO_write+0xf8>
 694:	44 0f       	add	r20, r20
 696:	55 1f       	adc	r21, r21
 698:	6a 95       	dec	r22
 69a:	e2 f7       	brpl	.-8      	; 0x694 <DIO_write+0xf4>
 69c:	ba 01       	movw	r22, r20
 69e:	60 95       	com	r22
 6a0:	62 23       	and	r22, r18
 6a2:	62 bb       	out	0x12, r22	; 18
 6a4:	80 e0       	ldi	r24, 0x00	; 0
 6a6:	08 95       	ret
 6a8:	41 30       	cpi	r20, 0x01	; 1
 6aa:	b9 f4       	brne	.+46     	; 0x6da <DIO_write+0x13a>
 6ac:	42 b3       	in	r20, 0x12	; 18
 6ae:	21 e0       	ldi	r18, 0x01	; 1
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	c9 01       	movw	r24, r18
 6b4:	02 c0       	rjmp	.+4      	; 0x6ba <DIO_write+0x11a>
 6b6:	88 0f       	add	r24, r24
 6b8:	99 1f       	adc	r25, r25
 6ba:	6a 95       	dec	r22
 6bc:	e2 f7       	brpl	.-8      	; 0x6b6 <DIO_write+0x116>
 6be:	84 2b       	or	r24, r20
 6c0:	82 bb       	out	0x12, r24	; 18
 6c2:	80 e0       	ldi	r24, 0x00	; 0
 6c4:	08 95       	ret
 6c6:	84 e0       	ldi	r24, 0x04	; 4
 6c8:	08 95       	ret
 6ca:	83 e0       	ldi	r24, 0x03	; 3
 6cc:	08 95       	ret
 6ce:	82 e0       	ldi	r24, 0x02	; 2
 6d0:	08 95       	ret
 6d2:	82 e0       	ldi	r24, 0x02	; 2
 6d4:	08 95       	ret
 6d6:	82 e0       	ldi	r24, 0x02	; 2
 6d8:	08 95       	ret
 6da:	82 e0       	ldi	r24, 0x02	; 2
 6dc:	08 95       	ret

000006de <DIO_toggle>:
 6de:	68 30       	cpi	r22, 0x08	; 8
 6e0:	08 f0       	brcs	.+2      	; 0x6e4 <DIO_toggle+0x6>
 6e2:	44 c0       	rjmp	.+136    	; 0x76c <DIO_toggle+0x8e>
 6e4:	82 34       	cpi	r24, 0x42	; 66
 6e6:	c1 f0       	breq	.+48     	; 0x718 <DIO_toggle+0x3a>
 6e8:	20 f4       	brcc	.+8      	; 0x6f2 <DIO_toggle+0x14>
 6ea:	81 34       	cpi	r24, 0x41	; 65
 6ec:	09 f0       	breq	.+2      	; 0x6f0 <DIO_toggle+0x12>
 6ee:	40 c0       	rjmp	.+128    	; 0x770 <DIO_toggle+0x92>
 6f0:	05 c0       	rjmp	.+10     	; 0x6fc <DIO_toggle+0x1e>
 6f2:	83 34       	cpi	r24, 0x43	; 67
 6f4:	f9 f0       	breq	.+62     	; 0x734 <DIO_toggle+0x56>
 6f6:	84 34       	cpi	r24, 0x44	; 68
 6f8:	d9 f5       	brne	.+118    	; 0x770 <DIO_toggle+0x92>
 6fa:	2a c0       	rjmp	.+84     	; 0x750 <DIO_toggle+0x72>
 6fc:	2b b3       	in	r18, 0x1b	; 27
 6fe:	81 e0       	ldi	r24, 0x01	; 1
 700:	90 e0       	ldi	r25, 0x00	; 0
 702:	ac 01       	movw	r20, r24
 704:	02 c0       	rjmp	.+4      	; 0x70a <DIO_toggle+0x2c>
 706:	44 0f       	add	r20, r20
 708:	55 1f       	adc	r21, r21
 70a:	6a 95       	dec	r22
 70c:	e2 f7       	brpl	.-8      	; 0x706 <DIO_toggle+0x28>
 70e:	ba 01       	movw	r22, r20
 710:	62 27       	eor	r22, r18
 712:	6b bb       	out	0x1b, r22	; 27
 714:	80 e0       	ldi	r24, 0x00	; 0
 716:	08 95       	ret
 718:	28 b3       	in	r18, 0x18	; 24
 71a:	81 e0       	ldi	r24, 0x01	; 1
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	ac 01       	movw	r20, r24
 720:	02 c0       	rjmp	.+4      	; 0x726 <DIO_toggle+0x48>
 722:	44 0f       	add	r20, r20
 724:	55 1f       	adc	r21, r21
 726:	6a 95       	dec	r22
 728:	e2 f7       	brpl	.-8      	; 0x722 <DIO_toggle+0x44>
 72a:	ba 01       	movw	r22, r20
 72c:	62 27       	eor	r22, r18
 72e:	68 bb       	out	0x18, r22	; 24
 730:	80 e0       	ldi	r24, 0x00	; 0
 732:	08 95       	ret
 734:	25 b3       	in	r18, 0x15	; 21
 736:	81 e0       	ldi	r24, 0x01	; 1
 738:	90 e0       	ldi	r25, 0x00	; 0
 73a:	ac 01       	movw	r20, r24
 73c:	02 c0       	rjmp	.+4      	; 0x742 <DIO_toggle+0x64>
 73e:	44 0f       	add	r20, r20
 740:	55 1f       	adc	r21, r21
 742:	6a 95       	dec	r22
 744:	e2 f7       	brpl	.-8      	; 0x73e <DIO_toggle+0x60>
 746:	ba 01       	movw	r22, r20
 748:	62 27       	eor	r22, r18
 74a:	65 bb       	out	0x15, r22	; 21
 74c:	80 e0       	ldi	r24, 0x00	; 0
 74e:	08 95       	ret
 750:	22 b3       	in	r18, 0x12	; 18
 752:	81 e0       	ldi	r24, 0x01	; 1
 754:	90 e0       	ldi	r25, 0x00	; 0
 756:	ac 01       	movw	r20, r24
 758:	02 c0       	rjmp	.+4      	; 0x75e <DIO_toggle+0x80>
 75a:	44 0f       	add	r20, r20
 75c:	55 1f       	adc	r21, r21
 75e:	6a 95       	dec	r22
 760:	e2 f7       	brpl	.-8      	; 0x75a <DIO_toggle+0x7c>
 762:	ba 01       	movw	r22, r20
 764:	62 27       	eor	r22, r18
 766:	62 bb       	out	0x12, r22	; 18
 768:	80 e0       	ldi	r24, 0x00	; 0
 76a:	08 95       	ret
 76c:	84 e0       	ldi	r24, 0x04	; 4
 76e:	08 95       	ret
 770:	83 e0       	ldi	r24, 0x03	; 3
 772:	08 95       	ret

00000774 <INT_sei>:

#include "interrupt.h"

void INT_sei(void) //enable global interrupts
{
	sei();
 774:	78 94       	sei
 776:	08 95       	ret

00000778 <INT0_rising>:
}
void INT0_rising(void)		// choose external interrupt sense (rising edge)
{
	MCUCR |= (1<<ISC00) | (1<<ISC00); 
 778:	85 b7       	in	r24, 0x35	; 53
 77a:	81 60       	ori	r24, 0x01	; 1
 77c:	85 bf       	out	0x35, r24	; 53
 77e:	08 95       	ret

00000780 <INT0_enable>:
}
void INT0_enable(void)		// Enable external interrupt 0 (INT0)
{
	GICR |= (1<<INT0);
 780:	8b b7       	in	r24, 0x3b	; 59
 782:	80 64       	ori	r24, 0x40	; 64
 784:	8b bf       	out	0x3b, r24	; 59
 786:	08 95       	ret

00000788 <TIMER0_init>:
 788:	13 be       	out	0x33, r1	; 51
 78a:	08 95       	ret

0000078c <TIMER0_start>:
 78c:	83 b7       	in	r24, 0x33	; 51
 78e:	85 60       	ori	r24, 0x05	; 5
 790:	83 bf       	out	0x33, r24	; 51
 792:	08 95       	ret

00000794 <TIMER0_stop>:
 794:	13 be       	out	0x33, r1	; 51
 796:	08 95       	ret

00000798 <TIMER0_clear>:
 798:	88 b7       	in	r24, 0x38	; 56
 79a:	81 60       	ori	r24, 0x01	; 1
 79c:	88 bf       	out	0x38, r24	; 56
 79e:	08 95       	ret

000007a0 <TIMER0_set>:
 7a0:	22 bf       	out	0x32, r18	; 50
 7a2:	08 95       	ret

000007a4 <TIMER0_get>:
 7a4:	88 b7       	in	r24, 0x38	; 56
 7a6:	81 70       	andi	r24, 0x01	; 1
 7a8:	08 95       	ret

000007aa <__subsf3>:
 7aa:	50 58       	subi	r21, 0x80	; 128

000007ac <__addsf3>:
 7ac:	bb 27       	eor	r27, r27
 7ae:	aa 27       	eor	r26, r26
 7b0:	0e d0       	rcall	.+28     	; 0x7ce <__addsf3x>
 7b2:	34 c2       	rjmp	.+1128   	; 0xc1c <__fp_round>
 7b4:	25 d2       	rcall	.+1098   	; 0xc00 <__fp_pscA>
 7b6:	30 f0       	brcs	.+12     	; 0x7c4 <__addsf3+0x18>
 7b8:	2a d2       	rcall	.+1108   	; 0xc0e <__fp_pscB>
 7ba:	20 f0       	brcs	.+8      	; 0x7c4 <__addsf3+0x18>
 7bc:	31 f4       	brne	.+12     	; 0x7ca <__addsf3+0x1e>
 7be:	9f 3f       	cpi	r25, 0xFF	; 255
 7c0:	11 f4       	brne	.+4      	; 0x7c6 <__addsf3+0x1a>
 7c2:	1e f4       	brtc	.+6      	; 0x7ca <__addsf3+0x1e>
 7c4:	0a c2       	rjmp	.+1044   	; 0xbda <__fp_nan>
 7c6:	0e f4       	brtc	.+2      	; 0x7ca <__addsf3+0x1e>
 7c8:	e0 95       	com	r30
 7ca:	e7 fb       	bst	r30, 7
 7cc:	d7 c1       	rjmp	.+942    	; 0xb7c <__fp_inf>

000007ce <__addsf3x>:
 7ce:	e9 2f       	mov	r30, r25
 7d0:	36 d2       	rcall	.+1132   	; 0xc3e <__fp_split3>
 7d2:	80 f3       	brcs	.-32     	; 0x7b4 <__addsf3+0x8>
 7d4:	ba 17       	cp	r27, r26
 7d6:	62 07       	cpc	r22, r18
 7d8:	73 07       	cpc	r23, r19
 7da:	84 07       	cpc	r24, r20
 7dc:	95 07       	cpc	r25, r21
 7de:	18 f0       	brcs	.+6      	; 0x7e6 <__addsf3x+0x18>
 7e0:	71 f4       	brne	.+28     	; 0x7fe <__addsf3x+0x30>
 7e2:	9e f5       	brtc	.+102    	; 0x84a <__addsf3x+0x7c>
 7e4:	65 c2       	rjmp	.+1226   	; 0xcb0 <__fp_zero>
 7e6:	0e f4       	brtc	.+2      	; 0x7ea <__addsf3x+0x1c>
 7e8:	e0 95       	com	r30
 7ea:	0b 2e       	mov	r0, r27
 7ec:	ba 2f       	mov	r27, r26
 7ee:	a0 2d       	mov	r26, r0
 7f0:	0b 01       	movw	r0, r22
 7f2:	b9 01       	movw	r22, r18
 7f4:	90 01       	movw	r18, r0
 7f6:	0c 01       	movw	r0, r24
 7f8:	ca 01       	movw	r24, r20
 7fa:	a0 01       	movw	r20, r0
 7fc:	11 24       	eor	r1, r1
 7fe:	ff 27       	eor	r31, r31
 800:	59 1b       	sub	r21, r25
 802:	99 f0       	breq	.+38     	; 0x82a <__addsf3x+0x5c>
 804:	59 3f       	cpi	r21, 0xF9	; 249
 806:	50 f4       	brcc	.+20     	; 0x81c <__addsf3x+0x4e>
 808:	50 3e       	cpi	r21, 0xE0	; 224
 80a:	68 f1       	brcs	.+90     	; 0x866 <__stack+0x7>
 80c:	1a 16       	cp	r1, r26
 80e:	f0 40       	sbci	r31, 0x00	; 0
 810:	a2 2f       	mov	r26, r18
 812:	23 2f       	mov	r18, r19
 814:	34 2f       	mov	r19, r20
 816:	44 27       	eor	r20, r20
 818:	58 5f       	subi	r21, 0xF8	; 248
 81a:	f3 cf       	rjmp	.-26     	; 0x802 <__addsf3x+0x34>
 81c:	46 95       	lsr	r20
 81e:	37 95       	ror	r19
 820:	27 95       	ror	r18
 822:	a7 95       	ror	r26
 824:	f0 40       	sbci	r31, 0x00	; 0
 826:	53 95       	inc	r21
 828:	c9 f7       	brne	.-14     	; 0x81c <__addsf3x+0x4e>
 82a:	7e f4       	brtc	.+30     	; 0x84a <__addsf3x+0x7c>
 82c:	1f 16       	cp	r1, r31
 82e:	ba 0b       	sbc	r27, r26
 830:	62 0b       	sbc	r22, r18
 832:	73 0b       	sbc	r23, r19
 834:	84 0b       	sbc	r24, r20
 836:	ba f0       	brmi	.+46     	; 0x866 <__stack+0x7>
 838:	91 50       	subi	r25, 0x01	; 1
 83a:	a1 f0       	breq	.+40     	; 0x864 <__stack+0x5>
 83c:	ff 0f       	add	r31, r31
 83e:	bb 1f       	adc	r27, r27
 840:	66 1f       	adc	r22, r22
 842:	77 1f       	adc	r23, r23
 844:	88 1f       	adc	r24, r24
 846:	c2 f7       	brpl	.-16     	; 0x838 <__addsf3x+0x6a>
 848:	0e c0       	rjmp	.+28     	; 0x866 <__stack+0x7>
 84a:	ba 0f       	add	r27, r26
 84c:	62 1f       	adc	r22, r18
 84e:	73 1f       	adc	r23, r19
 850:	84 1f       	adc	r24, r20
 852:	48 f4       	brcc	.+18     	; 0x866 <__stack+0x7>
 854:	87 95       	ror	r24
 856:	77 95       	ror	r23
 858:	67 95       	ror	r22
 85a:	b7 95       	ror	r27
 85c:	f7 95       	ror	r31
 85e:	9e 3f       	cpi	r25, 0xFE	; 254
 860:	08 f0       	brcs	.+2      	; 0x864 <__stack+0x5>
 862:	b3 cf       	rjmp	.-154    	; 0x7ca <__addsf3+0x1e>
 864:	93 95       	inc	r25
 866:	88 0f       	add	r24, r24
 868:	08 f0       	brcs	.+2      	; 0x86c <__stack+0xd>
 86a:	99 27       	eor	r25, r25
 86c:	ee 0f       	add	r30, r30
 86e:	97 95       	ror	r25
 870:	87 95       	ror	r24
 872:	08 95       	ret

00000874 <ceil>:
 874:	06 d2       	rcall	.+1036   	; 0xc82 <__fp_trunc>
 876:	80 f0       	brcs	.+32     	; 0x898 <ceil+0x24>
 878:	9f 37       	cpi	r25, 0x7F	; 127
 87a:	40 f4       	brcc	.+16     	; 0x88c <ceil+0x18>
 87c:	91 11       	cpse	r25, r1
 87e:	0e f4       	brtc	.+2      	; 0x882 <ceil+0xe>
 880:	18 c2       	rjmp	.+1072   	; 0xcb2 <__fp_szero>
 882:	60 e0       	ldi	r22, 0x00	; 0
 884:	70 e0       	ldi	r23, 0x00	; 0
 886:	80 e8       	ldi	r24, 0x80	; 128
 888:	9f e3       	ldi	r25, 0x3F	; 63
 88a:	08 95       	ret
 88c:	26 f0       	brts	.+8      	; 0x896 <ceil+0x22>
 88e:	1b 16       	cp	r1, r27
 890:	61 1d       	adc	r22, r1
 892:	71 1d       	adc	r23, r1
 894:	81 1d       	adc	r24, r1
 896:	78 c1       	rjmp	.+752    	; 0xb88 <__fp_mintl>
 898:	92 c1       	rjmp	.+804    	; 0xbbe <__fp_mpack>

0000089a <__cmpsf2>:
 89a:	4c d1       	rcall	.+664    	; 0xb34 <__fp_cmp>
 89c:	08 f4       	brcc	.+2      	; 0x8a0 <__cmpsf2+0x6>
 89e:	81 e0       	ldi	r24, 0x01	; 1
 8a0:	08 95       	ret

000008a2 <__divsf3>:
 8a2:	0c d0       	rcall	.+24     	; 0x8bc <__divsf3x>
 8a4:	bb c1       	rjmp	.+886    	; 0xc1c <__fp_round>
 8a6:	b3 d1       	rcall	.+870    	; 0xc0e <__fp_pscB>
 8a8:	40 f0       	brcs	.+16     	; 0x8ba <__divsf3+0x18>
 8aa:	aa d1       	rcall	.+852    	; 0xc00 <__fp_pscA>
 8ac:	30 f0       	brcs	.+12     	; 0x8ba <__divsf3+0x18>
 8ae:	21 f4       	brne	.+8      	; 0x8b8 <__divsf3+0x16>
 8b0:	5f 3f       	cpi	r21, 0xFF	; 255
 8b2:	19 f0       	breq	.+6      	; 0x8ba <__divsf3+0x18>
 8b4:	63 c1       	rjmp	.+710    	; 0xb7c <__fp_inf>
 8b6:	51 11       	cpse	r21, r1
 8b8:	fc c1       	rjmp	.+1016   	; 0xcb2 <__fp_szero>
 8ba:	8f c1       	rjmp	.+798    	; 0xbda <__fp_nan>

000008bc <__divsf3x>:
 8bc:	c0 d1       	rcall	.+896    	; 0xc3e <__fp_split3>
 8be:	98 f3       	brcs	.-26     	; 0x8a6 <__divsf3+0x4>

000008c0 <__divsf3_pse>:
 8c0:	99 23       	and	r25, r25
 8c2:	c9 f3       	breq	.-14     	; 0x8b6 <__divsf3+0x14>
 8c4:	55 23       	and	r21, r21
 8c6:	b1 f3       	breq	.-20     	; 0x8b4 <__divsf3+0x12>
 8c8:	95 1b       	sub	r25, r21
 8ca:	55 0b       	sbc	r21, r21
 8cc:	bb 27       	eor	r27, r27
 8ce:	aa 27       	eor	r26, r26
 8d0:	62 17       	cp	r22, r18
 8d2:	73 07       	cpc	r23, r19
 8d4:	84 07       	cpc	r24, r20
 8d6:	38 f0       	brcs	.+14     	; 0x8e6 <__divsf3_pse+0x26>
 8d8:	9f 5f       	subi	r25, 0xFF	; 255
 8da:	5f 4f       	sbci	r21, 0xFF	; 255
 8dc:	22 0f       	add	r18, r18
 8de:	33 1f       	adc	r19, r19
 8e0:	44 1f       	adc	r20, r20
 8e2:	aa 1f       	adc	r26, r26
 8e4:	a9 f3       	breq	.-22     	; 0x8d0 <__divsf3_pse+0x10>
 8e6:	33 d0       	rcall	.+102    	; 0x94e <__divsf3_pse+0x8e>
 8e8:	0e 2e       	mov	r0, r30
 8ea:	3a f0       	brmi	.+14     	; 0x8fa <__divsf3_pse+0x3a>
 8ec:	e0 e8       	ldi	r30, 0x80	; 128
 8ee:	30 d0       	rcall	.+96     	; 0x950 <__divsf3_pse+0x90>
 8f0:	91 50       	subi	r25, 0x01	; 1
 8f2:	50 40       	sbci	r21, 0x00	; 0
 8f4:	e6 95       	lsr	r30
 8f6:	00 1c       	adc	r0, r0
 8f8:	ca f7       	brpl	.-14     	; 0x8ec <__divsf3_pse+0x2c>
 8fa:	29 d0       	rcall	.+82     	; 0x94e <__divsf3_pse+0x8e>
 8fc:	fe 2f       	mov	r31, r30
 8fe:	27 d0       	rcall	.+78     	; 0x94e <__divsf3_pse+0x8e>
 900:	66 0f       	add	r22, r22
 902:	77 1f       	adc	r23, r23
 904:	88 1f       	adc	r24, r24
 906:	bb 1f       	adc	r27, r27
 908:	26 17       	cp	r18, r22
 90a:	37 07       	cpc	r19, r23
 90c:	48 07       	cpc	r20, r24
 90e:	ab 07       	cpc	r26, r27
 910:	b0 e8       	ldi	r27, 0x80	; 128
 912:	09 f0       	breq	.+2      	; 0x916 <__divsf3_pse+0x56>
 914:	bb 0b       	sbc	r27, r27
 916:	80 2d       	mov	r24, r0
 918:	bf 01       	movw	r22, r30
 91a:	ff 27       	eor	r31, r31
 91c:	93 58       	subi	r25, 0x83	; 131
 91e:	5f 4f       	sbci	r21, 0xFF	; 255
 920:	2a f0       	brmi	.+10     	; 0x92c <__divsf3_pse+0x6c>
 922:	9e 3f       	cpi	r25, 0xFE	; 254
 924:	51 05       	cpc	r21, r1
 926:	68 f0       	brcs	.+26     	; 0x942 <__divsf3_pse+0x82>
 928:	29 c1       	rjmp	.+594    	; 0xb7c <__fp_inf>
 92a:	c3 c1       	rjmp	.+902    	; 0xcb2 <__fp_szero>
 92c:	5f 3f       	cpi	r21, 0xFF	; 255
 92e:	ec f3       	brlt	.-6      	; 0x92a <__divsf3_pse+0x6a>
 930:	98 3e       	cpi	r25, 0xE8	; 232
 932:	dc f3       	brlt	.-10     	; 0x92a <__divsf3_pse+0x6a>
 934:	86 95       	lsr	r24
 936:	77 95       	ror	r23
 938:	67 95       	ror	r22
 93a:	b7 95       	ror	r27
 93c:	f7 95       	ror	r31
 93e:	9f 5f       	subi	r25, 0xFF	; 255
 940:	c9 f7       	brne	.-14     	; 0x934 <__divsf3_pse+0x74>
 942:	88 0f       	add	r24, r24
 944:	91 1d       	adc	r25, r1
 946:	96 95       	lsr	r25
 948:	87 95       	ror	r24
 94a:	97 f9       	bld	r25, 7
 94c:	08 95       	ret
 94e:	e1 e0       	ldi	r30, 0x01	; 1
 950:	66 0f       	add	r22, r22
 952:	77 1f       	adc	r23, r23
 954:	88 1f       	adc	r24, r24
 956:	bb 1f       	adc	r27, r27
 958:	62 17       	cp	r22, r18
 95a:	73 07       	cpc	r23, r19
 95c:	84 07       	cpc	r24, r20
 95e:	ba 07       	cpc	r27, r26
 960:	20 f0       	brcs	.+8      	; 0x96a <__divsf3_pse+0xaa>
 962:	62 1b       	sub	r22, r18
 964:	73 0b       	sbc	r23, r19
 966:	84 0b       	sbc	r24, r20
 968:	ba 0b       	sbc	r27, r26
 96a:	ee 1f       	adc	r30, r30
 96c:	88 f7       	brcc	.-30     	; 0x950 <__divsf3_pse+0x90>
 96e:	e0 95       	com	r30
 970:	08 95       	ret

00000972 <__fixsfdi>:
 972:	be e3       	ldi	r27, 0x3E	; 62
 974:	04 d0       	rcall	.+8      	; 0x97e <__fixunssfdi+0x2>
 976:	08 f4       	brcc	.+2      	; 0x97a <__fixsfdi+0x8>
 978:	90 e8       	ldi	r25, 0x80	; 128
 97a:	08 95       	ret

0000097c <__fixunssfdi>:
 97c:	bf e3       	ldi	r27, 0x3F	; 63
 97e:	22 27       	eor	r18, r18
 980:	33 27       	eor	r19, r19
 982:	a9 01       	movw	r20, r18
 984:	64 d1       	rcall	.+712    	; 0xc4e <__fp_splitA>
 986:	58 f1       	brcs	.+86     	; 0x9de <__fixunssfdi+0x62>
 988:	9f 57       	subi	r25, 0x7F	; 127
 98a:	40 f1       	brcs	.+80     	; 0x9dc <__fixunssfdi+0x60>
 98c:	b9 17       	cp	r27, r25
 98e:	38 f1       	brcs	.+78     	; 0x9de <__fixunssfdi+0x62>
 990:	bf e3       	ldi	r27, 0x3F	; 63
 992:	b9 1b       	sub	r27, r25
 994:	99 27       	eor	r25, r25
 996:	b8 50       	subi	r27, 0x08	; 8
 998:	3a f4       	brpl	.+14     	; 0x9a8 <__fixunssfdi+0x2c>
 99a:	66 0f       	add	r22, r22
 99c:	77 1f       	adc	r23, r23
 99e:	88 1f       	adc	r24, r24
 9a0:	99 1f       	adc	r25, r25
 9a2:	b3 95       	inc	r27
 9a4:	d2 f3       	brmi	.-12     	; 0x99a <__fixunssfdi+0x1e>
 9a6:	16 c0       	rjmp	.+44     	; 0x9d4 <__fixunssfdi+0x58>
 9a8:	b8 50       	subi	r27, 0x08	; 8
 9aa:	4a f0       	brmi	.+18     	; 0x9be <__fixunssfdi+0x42>
 9ac:	23 2f       	mov	r18, r19
 9ae:	34 2f       	mov	r19, r20
 9b0:	45 2f       	mov	r20, r21
 9b2:	56 2f       	mov	r21, r22
 9b4:	67 2f       	mov	r22, r23
 9b6:	78 2f       	mov	r23, r24
 9b8:	88 27       	eor	r24, r24
 9ba:	b8 50       	subi	r27, 0x08	; 8
 9bc:	ba f7       	brpl	.-18     	; 0x9ac <__fixunssfdi+0x30>
 9be:	b8 5f       	subi	r27, 0xF8	; 248
 9c0:	49 f0       	breq	.+18     	; 0x9d4 <__fixunssfdi+0x58>
 9c2:	86 95       	lsr	r24
 9c4:	77 95       	ror	r23
 9c6:	67 95       	ror	r22
 9c8:	57 95       	ror	r21
 9ca:	47 95       	ror	r20
 9cc:	37 95       	ror	r19
 9ce:	27 95       	ror	r18
 9d0:	ba 95       	dec	r27
 9d2:	b9 f7       	brne	.-18     	; 0x9c2 <__fixunssfdi+0x46>
 9d4:	0e f4       	brtc	.+2      	; 0x9d8 <__fixunssfdi+0x5c>
 9d6:	04 d1       	rcall	.+520    	; 0xbe0 <__fp_negdi>
 9d8:	88 94       	clc
 9da:	08 95       	ret
 9dc:	88 94       	clc
 9de:	60 e0       	ldi	r22, 0x00	; 0
 9e0:	70 e0       	ldi	r23, 0x00	; 0
 9e2:	cb 01       	movw	r24, r22
 9e4:	08 95       	ret

000009e6 <__fixunssfsi>:
 9e6:	33 d1       	rcall	.+614    	; 0xc4e <__fp_splitA>
 9e8:	88 f0       	brcs	.+34     	; 0xa0c <__fixunssfsi+0x26>
 9ea:	9f 57       	subi	r25, 0x7F	; 127
 9ec:	90 f0       	brcs	.+36     	; 0xa12 <__fixunssfsi+0x2c>
 9ee:	b9 2f       	mov	r27, r25
 9f0:	99 27       	eor	r25, r25
 9f2:	b7 51       	subi	r27, 0x17	; 23
 9f4:	a0 f0       	brcs	.+40     	; 0xa1e <__fixunssfsi+0x38>
 9f6:	d1 f0       	breq	.+52     	; 0xa2c <__fixunssfsi+0x46>
 9f8:	66 0f       	add	r22, r22
 9fa:	77 1f       	adc	r23, r23
 9fc:	88 1f       	adc	r24, r24
 9fe:	99 1f       	adc	r25, r25
 a00:	1a f0       	brmi	.+6      	; 0xa08 <__fixunssfsi+0x22>
 a02:	ba 95       	dec	r27
 a04:	c9 f7       	brne	.-14     	; 0x9f8 <__fixunssfsi+0x12>
 a06:	12 c0       	rjmp	.+36     	; 0xa2c <__fixunssfsi+0x46>
 a08:	b1 30       	cpi	r27, 0x01	; 1
 a0a:	81 f0       	breq	.+32     	; 0xa2c <__fixunssfsi+0x46>
 a0c:	51 d1       	rcall	.+674    	; 0xcb0 <__fp_zero>
 a0e:	b1 e0       	ldi	r27, 0x01	; 1
 a10:	08 95       	ret
 a12:	4e c1       	rjmp	.+668    	; 0xcb0 <__fp_zero>
 a14:	67 2f       	mov	r22, r23
 a16:	78 2f       	mov	r23, r24
 a18:	88 27       	eor	r24, r24
 a1a:	b8 5f       	subi	r27, 0xF8	; 248
 a1c:	39 f0       	breq	.+14     	; 0xa2c <__fixunssfsi+0x46>
 a1e:	b9 3f       	cpi	r27, 0xF9	; 249
 a20:	cc f3       	brlt	.-14     	; 0xa14 <__fixunssfsi+0x2e>
 a22:	86 95       	lsr	r24
 a24:	77 95       	ror	r23
 a26:	67 95       	ror	r22
 a28:	b3 95       	inc	r27
 a2a:	d9 f7       	brne	.-10     	; 0xa22 <__fixunssfsi+0x3c>
 a2c:	3e f4       	brtc	.+14     	; 0xa3c <__fixunssfsi+0x56>
 a2e:	90 95       	com	r25
 a30:	80 95       	com	r24
 a32:	70 95       	com	r23
 a34:	61 95       	neg	r22
 a36:	7f 4f       	sbci	r23, 0xFF	; 255
 a38:	8f 4f       	sbci	r24, 0xFF	; 255
 a3a:	9f 4f       	sbci	r25, 0xFF	; 255
 a3c:	08 95       	ret

00000a3e <__floatunsisf>:
 a3e:	e8 94       	clt
 a40:	09 c0       	rjmp	.+18     	; 0xa54 <__floatsisf+0x12>

00000a42 <__floatsisf>:
 a42:	97 fb       	bst	r25, 7
 a44:	3e f4       	brtc	.+14     	; 0xa54 <__floatsisf+0x12>
 a46:	90 95       	com	r25
 a48:	80 95       	com	r24
 a4a:	70 95       	com	r23
 a4c:	61 95       	neg	r22
 a4e:	7f 4f       	sbci	r23, 0xFF	; 255
 a50:	8f 4f       	sbci	r24, 0xFF	; 255
 a52:	9f 4f       	sbci	r25, 0xFF	; 255
 a54:	99 23       	and	r25, r25
 a56:	a9 f0       	breq	.+42     	; 0xa82 <__floatsisf+0x40>
 a58:	f9 2f       	mov	r31, r25
 a5a:	96 e9       	ldi	r25, 0x96	; 150
 a5c:	bb 27       	eor	r27, r27
 a5e:	93 95       	inc	r25
 a60:	f6 95       	lsr	r31
 a62:	87 95       	ror	r24
 a64:	77 95       	ror	r23
 a66:	67 95       	ror	r22
 a68:	b7 95       	ror	r27
 a6a:	f1 11       	cpse	r31, r1
 a6c:	f8 cf       	rjmp	.-16     	; 0xa5e <__floatsisf+0x1c>
 a6e:	fa f4       	brpl	.+62     	; 0xaae <__floatsisf+0x6c>
 a70:	bb 0f       	add	r27, r27
 a72:	11 f4       	brne	.+4      	; 0xa78 <__floatsisf+0x36>
 a74:	60 ff       	sbrs	r22, 0
 a76:	1b c0       	rjmp	.+54     	; 0xaae <__floatsisf+0x6c>
 a78:	6f 5f       	subi	r22, 0xFF	; 255
 a7a:	7f 4f       	sbci	r23, 0xFF	; 255
 a7c:	8f 4f       	sbci	r24, 0xFF	; 255
 a7e:	9f 4f       	sbci	r25, 0xFF	; 255
 a80:	16 c0       	rjmp	.+44     	; 0xaae <__floatsisf+0x6c>
 a82:	88 23       	and	r24, r24
 a84:	11 f0       	breq	.+4      	; 0xa8a <__floatsisf+0x48>
 a86:	96 e9       	ldi	r25, 0x96	; 150
 a88:	11 c0       	rjmp	.+34     	; 0xaac <__floatsisf+0x6a>
 a8a:	77 23       	and	r23, r23
 a8c:	21 f0       	breq	.+8      	; 0xa96 <__floatsisf+0x54>
 a8e:	9e e8       	ldi	r25, 0x8E	; 142
 a90:	87 2f       	mov	r24, r23
 a92:	76 2f       	mov	r23, r22
 a94:	05 c0       	rjmp	.+10     	; 0xaa0 <__floatsisf+0x5e>
 a96:	66 23       	and	r22, r22
 a98:	71 f0       	breq	.+28     	; 0xab6 <__floatsisf+0x74>
 a9a:	96 e8       	ldi	r25, 0x86	; 134
 a9c:	86 2f       	mov	r24, r22
 a9e:	70 e0       	ldi	r23, 0x00	; 0
 aa0:	60 e0       	ldi	r22, 0x00	; 0
 aa2:	2a f0       	brmi	.+10     	; 0xaae <__floatsisf+0x6c>
 aa4:	9a 95       	dec	r25
 aa6:	66 0f       	add	r22, r22
 aa8:	77 1f       	adc	r23, r23
 aaa:	88 1f       	adc	r24, r24
 aac:	da f7       	brpl	.-10     	; 0xaa4 <__floatsisf+0x62>
 aae:	88 0f       	add	r24, r24
 ab0:	96 95       	lsr	r25
 ab2:	87 95       	ror	r24
 ab4:	97 f9       	bld	r25, 7
 ab6:	08 95       	ret

00000ab8 <__floatundisf>:
 ab8:	e8 94       	clt

00000aba <__fp_di2sf>:
 aba:	f9 2f       	mov	r31, r25
 abc:	96 eb       	ldi	r25, 0xB6	; 182
 abe:	ff 23       	and	r31, r31
 ac0:	81 f0       	breq	.+32     	; 0xae2 <__fp_di2sf+0x28>
 ac2:	12 16       	cp	r1, r18
 ac4:	13 06       	cpc	r1, r19
 ac6:	14 06       	cpc	r1, r20
 ac8:	44 0b       	sbc	r20, r20
 aca:	93 95       	inc	r25
 acc:	f6 95       	lsr	r31
 ace:	87 95       	ror	r24
 ad0:	77 95       	ror	r23
 ad2:	67 95       	ror	r22
 ad4:	57 95       	ror	r21
 ad6:	40 40       	sbci	r20, 0x00	; 0
 ad8:	ff 23       	and	r31, r31
 ada:	b9 f7       	brne	.-18     	; 0xaca <__fp_di2sf+0x10>
 adc:	1b c0       	rjmp	.+54     	; 0xb14 <__fp_di2sf+0x5a>
 ade:	99 27       	eor	r25, r25
 ae0:	08 95       	ret
 ae2:	88 23       	and	r24, r24
 ae4:	51 f4       	brne	.+20     	; 0xafa <__fp_di2sf+0x40>
 ae6:	98 50       	subi	r25, 0x08	; 8
 ae8:	d2 f7       	brpl	.-12     	; 0xade <__fp_di2sf+0x24>
 aea:	87 2b       	or	r24, r23
 aec:	76 2f       	mov	r23, r22
 aee:	65 2f       	mov	r22, r21
 af0:	54 2f       	mov	r21, r20
 af2:	43 2f       	mov	r20, r19
 af4:	32 2f       	mov	r19, r18
 af6:	20 e0       	ldi	r18, 0x00	; 0
 af8:	b1 f3       	breq	.-20     	; 0xae6 <__fp_di2sf+0x2c>
 afa:	12 16       	cp	r1, r18
 afc:	13 06       	cpc	r1, r19
 afe:	14 06       	cpc	r1, r20
 b00:	44 0b       	sbc	r20, r20
 b02:	88 23       	and	r24, r24
 b04:	3a f0       	brmi	.+14     	; 0xb14 <__fp_di2sf+0x5a>
 b06:	9a 95       	dec	r25
 b08:	44 0f       	add	r20, r20
 b0a:	55 1f       	adc	r21, r21
 b0c:	66 1f       	adc	r22, r22
 b0e:	77 1f       	adc	r23, r23
 b10:	88 1f       	adc	r24, r24
 b12:	ca f7       	brpl	.-14     	; 0xb06 <__fp_di2sf+0x4c>
 b14:	55 23       	and	r21, r21
 b16:	4a f4       	brpl	.+18     	; 0xb2a <__fp_di2sf+0x70>
 b18:	44 0f       	add	r20, r20
 b1a:	55 1f       	adc	r21, r21
 b1c:	11 f4       	brne	.+4      	; 0xb22 <__fp_di2sf+0x68>
 b1e:	60 ff       	sbrs	r22, 0
 b20:	04 c0       	rjmp	.+8      	; 0xb2a <__fp_di2sf+0x70>
 b22:	6f 5f       	subi	r22, 0xFF	; 255
 b24:	7f 4f       	sbci	r23, 0xFF	; 255
 b26:	8f 4f       	sbci	r24, 0xFF	; 255
 b28:	9f 4f       	sbci	r25, 0xFF	; 255
 b2a:	88 0f       	add	r24, r24
 b2c:	96 95       	lsr	r25
 b2e:	87 95       	ror	r24
 b30:	97 f9       	bld	r25, 7
 b32:	08 95       	ret

00000b34 <__fp_cmp>:
 b34:	99 0f       	add	r25, r25
 b36:	00 08       	sbc	r0, r0
 b38:	55 0f       	add	r21, r21
 b3a:	aa 0b       	sbc	r26, r26
 b3c:	e0 e8       	ldi	r30, 0x80	; 128
 b3e:	fe ef       	ldi	r31, 0xFE	; 254
 b40:	16 16       	cp	r1, r22
 b42:	17 06       	cpc	r1, r23
 b44:	e8 07       	cpc	r30, r24
 b46:	f9 07       	cpc	r31, r25
 b48:	c0 f0       	brcs	.+48     	; 0xb7a <__fp_cmp+0x46>
 b4a:	12 16       	cp	r1, r18
 b4c:	13 06       	cpc	r1, r19
 b4e:	e4 07       	cpc	r30, r20
 b50:	f5 07       	cpc	r31, r21
 b52:	98 f0       	brcs	.+38     	; 0xb7a <__fp_cmp+0x46>
 b54:	62 1b       	sub	r22, r18
 b56:	73 0b       	sbc	r23, r19
 b58:	84 0b       	sbc	r24, r20
 b5a:	95 0b       	sbc	r25, r21
 b5c:	39 f4       	brne	.+14     	; 0xb6c <__fp_cmp+0x38>
 b5e:	0a 26       	eor	r0, r26
 b60:	61 f0       	breq	.+24     	; 0xb7a <__fp_cmp+0x46>
 b62:	23 2b       	or	r18, r19
 b64:	24 2b       	or	r18, r20
 b66:	25 2b       	or	r18, r21
 b68:	21 f4       	brne	.+8      	; 0xb72 <__fp_cmp+0x3e>
 b6a:	08 95       	ret
 b6c:	0a 26       	eor	r0, r26
 b6e:	09 f4       	brne	.+2      	; 0xb72 <__fp_cmp+0x3e>
 b70:	a1 40       	sbci	r26, 0x01	; 1
 b72:	a6 95       	lsr	r26
 b74:	8f ef       	ldi	r24, 0xFF	; 255
 b76:	81 1d       	adc	r24, r1
 b78:	81 1d       	adc	r24, r1
 b7a:	08 95       	ret

00000b7c <__fp_inf>:
 b7c:	97 f9       	bld	r25, 7
 b7e:	9f 67       	ori	r25, 0x7F	; 127
 b80:	80 e8       	ldi	r24, 0x80	; 128
 b82:	70 e0       	ldi	r23, 0x00	; 0
 b84:	60 e0       	ldi	r22, 0x00	; 0
 b86:	08 95       	ret

00000b88 <__fp_mintl>:
 b88:	88 23       	and	r24, r24
 b8a:	71 f4       	brne	.+28     	; 0xba8 <__fp_mintl+0x20>
 b8c:	77 23       	and	r23, r23
 b8e:	21 f0       	breq	.+8      	; 0xb98 <__fp_mintl+0x10>
 b90:	98 50       	subi	r25, 0x08	; 8
 b92:	87 2b       	or	r24, r23
 b94:	76 2f       	mov	r23, r22
 b96:	07 c0       	rjmp	.+14     	; 0xba6 <__fp_mintl+0x1e>
 b98:	66 23       	and	r22, r22
 b9a:	11 f4       	brne	.+4      	; 0xba0 <__fp_mintl+0x18>
 b9c:	99 27       	eor	r25, r25
 b9e:	0d c0       	rjmp	.+26     	; 0xbba <__fp_mintl+0x32>
 ba0:	90 51       	subi	r25, 0x10	; 16
 ba2:	86 2b       	or	r24, r22
 ba4:	70 e0       	ldi	r23, 0x00	; 0
 ba6:	60 e0       	ldi	r22, 0x00	; 0
 ba8:	2a f0       	brmi	.+10     	; 0xbb4 <__fp_mintl+0x2c>
 baa:	9a 95       	dec	r25
 bac:	66 0f       	add	r22, r22
 bae:	77 1f       	adc	r23, r23
 bb0:	88 1f       	adc	r24, r24
 bb2:	da f7       	brpl	.-10     	; 0xbaa <__fp_mintl+0x22>
 bb4:	88 0f       	add	r24, r24
 bb6:	96 95       	lsr	r25
 bb8:	87 95       	ror	r24
 bba:	97 f9       	bld	r25, 7
 bbc:	08 95       	ret

00000bbe <__fp_mpack>:
 bbe:	9f 3f       	cpi	r25, 0xFF	; 255
 bc0:	31 f0       	breq	.+12     	; 0xbce <__fp_mpack_finite+0xc>

00000bc2 <__fp_mpack_finite>:
 bc2:	91 50       	subi	r25, 0x01	; 1
 bc4:	20 f4       	brcc	.+8      	; 0xbce <__fp_mpack_finite+0xc>
 bc6:	87 95       	ror	r24
 bc8:	77 95       	ror	r23
 bca:	67 95       	ror	r22
 bcc:	b7 95       	ror	r27
 bce:	88 0f       	add	r24, r24
 bd0:	91 1d       	adc	r25, r1
 bd2:	96 95       	lsr	r25
 bd4:	87 95       	ror	r24
 bd6:	97 f9       	bld	r25, 7
 bd8:	08 95       	ret

00000bda <__fp_nan>:
 bda:	9f ef       	ldi	r25, 0xFF	; 255
 bdc:	80 ec       	ldi	r24, 0xC0	; 192
 bde:	08 95       	ret

00000be0 <__fp_negdi>:
 be0:	90 95       	com	r25
 be2:	80 95       	com	r24
 be4:	70 95       	com	r23
 be6:	60 95       	com	r22
 be8:	50 95       	com	r21
 bea:	40 95       	com	r20
 bec:	30 95       	com	r19
 bee:	21 95       	neg	r18
 bf0:	3f 4f       	sbci	r19, 0xFF	; 255
 bf2:	4f 4f       	sbci	r20, 0xFF	; 255
 bf4:	5f 4f       	sbci	r21, 0xFF	; 255
 bf6:	6f 4f       	sbci	r22, 0xFF	; 255
 bf8:	7f 4f       	sbci	r23, 0xFF	; 255
 bfa:	8f 4f       	sbci	r24, 0xFF	; 255
 bfc:	9f 4f       	sbci	r25, 0xFF	; 255
 bfe:	08 95       	ret

00000c00 <__fp_pscA>:
 c00:	00 24       	eor	r0, r0
 c02:	0a 94       	dec	r0
 c04:	16 16       	cp	r1, r22
 c06:	17 06       	cpc	r1, r23
 c08:	18 06       	cpc	r1, r24
 c0a:	09 06       	cpc	r0, r25
 c0c:	08 95       	ret

00000c0e <__fp_pscB>:
 c0e:	00 24       	eor	r0, r0
 c10:	0a 94       	dec	r0
 c12:	12 16       	cp	r1, r18
 c14:	13 06       	cpc	r1, r19
 c16:	14 06       	cpc	r1, r20
 c18:	05 06       	cpc	r0, r21
 c1a:	08 95       	ret

00000c1c <__fp_round>:
 c1c:	09 2e       	mov	r0, r25
 c1e:	03 94       	inc	r0
 c20:	00 0c       	add	r0, r0
 c22:	11 f4       	brne	.+4      	; 0xc28 <__fp_round+0xc>
 c24:	88 23       	and	r24, r24
 c26:	52 f0       	brmi	.+20     	; 0xc3c <__fp_round+0x20>
 c28:	bb 0f       	add	r27, r27
 c2a:	40 f4       	brcc	.+16     	; 0xc3c <__fp_round+0x20>
 c2c:	bf 2b       	or	r27, r31
 c2e:	11 f4       	brne	.+4      	; 0xc34 <__fp_round+0x18>
 c30:	60 ff       	sbrs	r22, 0
 c32:	04 c0       	rjmp	.+8      	; 0xc3c <__fp_round+0x20>
 c34:	6f 5f       	subi	r22, 0xFF	; 255
 c36:	7f 4f       	sbci	r23, 0xFF	; 255
 c38:	8f 4f       	sbci	r24, 0xFF	; 255
 c3a:	9f 4f       	sbci	r25, 0xFF	; 255
 c3c:	08 95       	ret

00000c3e <__fp_split3>:
 c3e:	57 fd       	sbrc	r21, 7
 c40:	90 58       	subi	r25, 0x80	; 128
 c42:	44 0f       	add	r20, r20
 c44:	55 1f       	adc	r21, r21
 c46:	59 f0       	breq	.+22     	; 0xc5e <__fp_splitA+0x10>
 c48:	5f 3f       	cpi	r21, 0xFF	; 255
 c4a:	71 f0       	breq	.+28     	; 0xc68 <__fp_splitA+0x1a>
 c4c:	47 95       	ror	r20

00000c4e <__fp_splitA>:
 c4e:	88 0f       	add	r24, r24
 c50:	97 fb       	bst	r25, 7
 c52:	99 1f       	adc	r25, r25
 c54:	61 f0       	breq	.+24     	; 0xc6e <__fp_splitA+0x20>
 c56:	9f 3f       	cpi	r25, 0xFF	; 255
 c58:	79 f0       	breq	.+30     	; 0xc78 <__fp_splitA+0x2a>
 c5a:	87 95       	ror	r24
 c5c:	08 95       	ret
 c5e:	12 16       	cp	r1, r18
 c60:	13 06       	cpc	r1, r19
 c62:	14 06       	cpc	r1, r20
 c64:	55 1f       	adc	r21, r21
 c66:	f2 cf       	rjmp	.-28     	; 0xc4c <__fp_split3+0xe>
 c68:	46 95       	lsr	r20
 c6a:	f1 df       	rcall	.-30     	; 0xc4e <__fp_splitA>
 c6c:	08 c0       	rjmp	.+16     	; 0xc7e <__fp_splitA+0x30>
 c6e:	16 16       	cp	r1, r22
 c70:	17 06       	cpc	r1, r23
 c72:	18 06       	cpc	r1, r24
 c74:	99 1f       	adc	r25, r25
 c76:	f1 cf       	rjmp	.-30     	; 0xc5a <__fp_splitA+0xc>
 c78:	86 95       	lsr	r24
 c7a:	71 05       	cpc	r23, r1
 c7c:	61 05       	cpc	r22, r1
 c7e:	08 94       	sec
 c80:	08 95       	ret

00000c82 <__fp_trunc>:
 c82:	e5 df       	rcall	.-54     	; 0xc4e <__fp_splitA>
 c84:	a0 f0       	brcs	.+40     	; 0xcae <__fp_trunc+0x2c>
 c86:	be e7       	ldi	r27, 0x7E	; 126
 c88:	b9 17       	cp	r27, r25
 c8a:	88 f4       	brcc	.+34     	; 0xcae <__fp_trunc+0x2c>
 c8c:	bb 27       	eor	r27, r27
 c8e:	9f 38       	cpi	r25, 0x8F	; 143
 c90:	60 f4       	brcc	.+24     	; 0xcaa <__fp_trunc+0x28>
 c92:	16 16       	cp	r1, r22
 c94:	b1 1d       	adc	r27, r1
 c96:	67 2f       	mov	r22, r23
 c98:	78 2f       	mov	r23, r24
 c9a:	88 27       	eor	r24, r24
 c9c:	98 5f       	subi	r25, 0xF8	; 248
 c9e:	f7 cf       	rjmp	.-18     	; 0xc8e <__fp_trunc+0xc>
 ca0:	86 95       	lsr	r24
 ca2:	77 95       	ror	r23
 ca4:	67 95       	ror	r22
 ca6:	b1 1d       	adc	r27, r1
 ca8:	93 95       	inc	r25
 caa:	96 39       	cpi	r25, 0x96	; 150
 cac:	c8 f3       	brcs	.-14     	; 0xca0 <__fp_trunc+0x1e>
 cae:	08 95       	ret

00000cb0 <__fp_zero>:
 cb0:	e8 94       	clt

00000cb2 <__fp_szero>:
 cb2:	bb 27       	eor	r27, r27
 cb4:	66 27       	eor	r22, r22
 cb6:	77 27       	eor	r23, r23
 cb8:	cb 01       	movw	r24, r22
 cba:	97 f9       	bld	r25, 7
 cbc:	08 95       	ret

00000cbe <_exit>:
 cbe:	f8 94       	cli

00000cc0 <__stop_program>:
 cc0:	ff cf       	rjmp	.-2      	; 0xcc0 <__stop_program>
